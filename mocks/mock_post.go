// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gjbastidas/GoSimpleAPIWithMongoDB/db (interfaces: PostIface)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	mongo "go.mongodb.org/mongo-driver/mongo"
)

// MockPostIface is a mock of PostIface interface.
type MockPostIface struct {
	ctrl     *gomock.Controller
	recorder *MockPostIfaceMockRecorder
}

// MockPostIfaceMockRecorder is the mock recorder for MockPostIface.
type MockPostIfaceMockRecorder struct {
	mock *MockPostIface
}

// NewMockPostIface creates a new mock instance.
func NewMockPostIface(ctrl *gomock.Controller) *MockPostIface {
	mock := &MockPostIface{ctrl: ctrl}
	mock.recorder = &MockPostIfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPostIface) EXPECT() *MockPostIfaceMockRecorder {
	return m.recorder
}

// CreatePost mocks base method.
func (m *MockPostIface) CreatePost(arg0 context.Context, arg1 *mongo.Client, arg2, arg3 string) (*mongo.InsertOneResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePost", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*mongo.InsertOneResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePost indicates an expected call of CreatePost.
func (mr *MockPostIfaceMockRecorder) CreatePost(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePost", reflect.TypeOf((*MockPostIface)(nil).CreatePost), arg0, arg1, arg2, arg3)
}

// GetPost mocks base method.
func (m *MockPostIface) GetPost(arg0 context.Context, arg1 *mongo.Client, arg2, arg3 string) *mongo.SingleResult {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPost", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*mongo.SingleResult)
	return ret0
}

// GetPost indicates an expected call of GetPost.
func (mr *MockPostIfaceMockRecorder) GetPost(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPost", reflect.TypeOf((*MockPostIface)(nil).GetPost), arg0, arg1, arg2, arg3)
}
